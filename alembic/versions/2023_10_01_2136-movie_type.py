"""movie_type

Revision ID: 78ee9804cef5
Revises: 2a44d1ae9b04
Create Date: 2023-10-01 21:36:35.680153

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op
from api.v1.features.movie.schemas import MovieType

# revision identifiers, used by Alembic.
revision: str = "78ee9804cef5"
down_revision: Union[str, None] = "2a44d1ae9b04"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Add new column without making it non-nullable yet
    op.add_column("movie", sa.Column("type", sa.Enum(MovieType, native_enum=False), nullable=True))

    # Update existing rows
    op.execute("UPDATE movie SET type='movie'")

    # Now alter column to make it non-nullable
    op.add_column("movie", sa.Column("type", sa.Enum(MovieType, native_enum=False), nullable=False))

    op.create_unique_constraint(None, "movie_genre", ["id"])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "movie_genre", type_="unique")
    op.drop_column("movie", "type")
    # ### end Alembic commands ###
